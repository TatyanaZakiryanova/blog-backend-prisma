paths:
  /comments/{id}:
    patch:
      tags:
        - Comments
      summary: Update a comment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 25
          description: Comment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '200':
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedCommentResponse'
        '400':
          description: Validation failed
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '404':
          description: Comment not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Comments
      summary: Delete a comment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 25
          description: Comment ID
      responses:
        '200':
          description: Comment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Comment deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '404':
          description: Comment not found
        '500':
          description: Internal server error

components:
  schemas:
    CommentInput:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          example: New comment

    UpdatedCommentResponse:
      type: object
      required:
        - message
        - data
      properties:
        message:
          type: string
          example: Comment updated successfully
        data:
          $ref: '#/components/schemas/Comment'

    Comment:
      type: object
      required:
        - id
        - text
        - postId
        - userId
        - createdAt
        - updatedAt
        - user
      properties:
        id:
          type: integer
          example: 20
        text:
          type: string
          example: New comment
        postId:
          type: integer
          example: 5
        userId:
          type: integer
          example: 25
        createdAt:
          type: string
          format: date-time
          example: 2025-05-24T03:28:03.020Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-05-24T03:28:03.020Z
        user:
          type: object
          properties:
            id:
              type: integer
              example: 25
            fullName:
              type: string
              example: John Doe
            avatarUrl:
              type: string
              nullable: true
              example: null

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
